apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: semantic-release
spec:
  workspaces:
    - name: source
  params:
    - name: verbose
      description: Log the commands that are executed during the operation.
      type: string
      default: "false"
    - name: repositoryUrl
      description: the project repository Url 
      type: string
      default: ""
    - name: ciRegistry
      description: ci registry base url
      type: string
      default: ""
    - name: ciRegistryUser
      description: ci registry username
      type: string
      default: ""
    - name: ciRegistryPass
      description: ci registry user password/token
      type: string
      default: ""          
  steps:
    - name: semantic-release
      image: corollo/semantic-node-git:1.0.0
      workingDir: /workspace/source
      env: 
      - name: PARAM_VERBOSE
        value: $(params.verbose)      
      - name: REPOSITORY_URL
        value: $(params.repositoryUrl)
      - name: CI
        value: 'true'
      - name: DOCKER_HOST
        value: tcp://localhost:2376
      - name: DOCKER_TLS_VERIFY
        value: '1'
      - name: DOCKER_CERT_PATH
        value: /certs/client
      - name: CI_REGISTRY
        value: $(params.ciRegistry)
      - name: CI_REGISTRY_USER
        value: $(params.ciRegistryUser)
      envFrom:
        - secretRef:
            name: registry-pass-secrets
        - secretRef:
            name: git-token-secrets
      script: |
        #!/usr/bin/env sh
        set -eu

        if [ "${PARAM_VERBOSE}" = "true" ] ; then
          set -x
        fi
        
        # fix remove newline
        export GITHUB_TOKEN=${GITHUB_TOKEN//$'\n'/}
        export CI_REGISTRY_PASS=${CI_REGISTRY_PASS//$'\n'/}
        
        echo "# run docker login on registry with user $CI_REGISTRY_USER"
        docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASS
        
        echo -e "\n# run install semantic plugin"
        npm install @semantic-release/git @semantic-release/commit-analyzer @semantic-release/release-notes-generator @semantic-release/github @semantic-release/exec @semantic-release/changelog conventional-changelog-conventionalcommits @codedependant/semantic-release-docker --no-save
        
        echo -e "\n# run semantic-release "
        npx semantic-release@22 --repository-url ${REPOSITORY_URL}

        echo "# end"
      volumeMounts:
        - mountPath: /certs/client
          name: dind-certs
  sidecars:
    - image: docker:dind
      name: server
      args:
        - --storage-driver=vfs
        - --userland-proxy=false
        - --debug
      securityContext:
        privileged: true
      env:
      # Write generated certs to the path shared with the client.
      - name: DOCKER_TLS_CERTDIR
        value: /certs
      volumeMounts:
      - mountPath: /certs/client
        name: dind-certs
      - mountPath: /var/lib/docker
        name: docker-storage        
      # Wait for the dind daemon to generate the certs it will share with the
      # client.
      readinessProbe:
        periodSeconds: 1
        exec:
          command: ['ls', '/certs/client/ca.pem']
  volumes:
  - name: dind-certs
    emptyDir: {}
  - name: docker-storage
    persistentvolumeclaim: 
      claimName: docker-storage-pvc  
